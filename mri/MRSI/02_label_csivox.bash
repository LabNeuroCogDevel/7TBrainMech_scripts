#!/bin/bash

# xxxxxxxxVI: Originally MRSI_CoregSeg_MB4_plusExtras.bash
# 20181213WF: modified for lncd files
#
# wrapper for matlab:
#  Divide ROI & Resize Scout to 1mm 
#  Coregistration (MPRAGE to Scout) & linear regression
#  estimate probability of FS ROI @ each csi voxel

# run for all with SI* sheets from box
# ls /Volumes/Hera/Raw/MRprojects/7TBrainMech/MRSI_BrainMechR01/*/SI1/spreadsheet.csv|while read f; do basename $(dirname $(dirname $f)); done| join -i -t' ' -1 1 -2 2 - <(sort -t' ' -k2,2 txt/ids.txt)| cut -f 2 -d' '| xargs -n1 ./02_label_csivox.bash
#

set -euo pipefail
export AFNI_COMPRESSOR="" AFNI_NIFTI_TYPE_WARN=NO
scriptdir=$(cd $(dirname $0);pwd)

if [ $# -eq 0 ]; then
   cat <<HEREDOC 
   USAGE:
     $0 subj_date [scout_slice_num=17]
     # see /Volumes/Hera/Projects/7TBrainMech/pipelines/MHT1_2mm/ for subj list
HEREDOC
  exit 1
fi

## read subject input

# user input
subj_date=$1

# slice numbers of SCOUT corresponding to the center positions of CSI acquisition 
#   add 1 to Siemens Slice number in header
[ $# -eq 1 ] && scout_slice_num=17 || scout_slice_num="$2"

# files
subj=${subj_date%%_*}
FSdir=/Volumes/Hera/Projects/7TBrainMech/FS/$subj/ 
scout="/Volumes/Hera/Projects/7TBrainMech/subjs/$subj_date/slice_PFC/slice_pfc.nii.gz"
# no need for mprage -- using freesurfer's orig.nii
# could use link
#filename_MRSI=spreadsheet  # MRSI excel file name after excluding '_SI*'
rawloc=/Volumes/Hera/Raw/BIDS/7TBrainMech/rawlinks/
mrid=$( readlink $(find  $rawloc/$subj_date/ -type l -print -quit) | sed 's:.*Mech/\([^/]*\)/.*:\1:')
[ -z $mrid ] && echo "cannot find $subj_date in $rawloc" >&2 && exit 1

csi_si1_csv="/Volumes/Hera/Raw/MRprojects/7TBrainMech/MRSI_BrainMechR01/$mrid/SI1/spreadsheet.csv"

check_file(){
    file="$1";shift
    msg="$1";shift
    [ -r "$file" ] && return
    echo "$subj_date: no file: $file"
    echo "  # fix: $msg" 
    exit 1
}

csi_json="$scriptdir/csi_settings.json"

check_file "$scout"                     "run ./01_get_slices.bash"
check_file "$FSdir/mri/aparc+aseg.mgz"  "run ../FS/002_fromPSC.bash"
check_file "$csi_si1_csv"               "run ../001_rsync_MRSI_from_box.bash"
check_file "$csi_json"                  "see https://github.com/LabNeuroCogDevel/7TBrainMech_scripts/blob/master/mri/MRSI/csi_settings.json"

data_dir="/Volumes/Hera/Projects/7TBrainMech/subjs/$subj_date/slice_PFC/MRSI"
[ ! -d $data_dir ] && mkdir $data_dir

############################ depends #############################################

# where are the matlab toolboxes and code
matlabcode_dir=$scriptdir/Codes_yj/
spm_dir=/opt/ni_tools/matlab_toolboxes/spm12/
nifti_dir=$matlabcode_dir/NIfTI

# where to save everything
# where to save the grouped FS parcelations rois
ROI_dir=$data_dir/parc_group
# where to save matlab log
log_reg=$data_dir/Log_Regression.out
# No FLAIR, so empty filename
filename_flair=""; 


## UNUSED, prob thres (should be between 0 and 1)
thresh_total=0.75     # GM + WM > thresh_total 
thresh_maxtissue=0.5  # Fraction of Max Region > thresh_maxtissue

###################### make files   ############################################

[ -e $log_reg ] && echo "Deleting log file for linear regression"   && rm $log_reg
# is this a good idea?
[ -d $ROI_dir ] && echo "Deleting parc grouping directory $ROI_dir" && rm -r $ROI_dir
[ ! -d $ROI_dir ] && mkdir -p $ROI_dir


cd $data_dir
mgz2nii_RAS() { 
   # freesurfer mgz into nii (w/ RAS matrix orientation)
   mri_convert --in_type mgz --out_type nii --out_orientation RAS \
      $FSdir/mri/$1.mgz $1.nii
   # AFNI converts NIFTI_datatype=8 (INT32) to FLOAT32
   3dcopy $1.nii  $ROI_dir/$1.nii
   # remove mri_convert (INT32) version
   rm $1.nii
}

mgz2nii_RAS orig
mgz2nii_RAS aparc+aseg
mgz2nii_RAS wmparc

# scout in data dir for matlab resize
3dcopy -overwrite $scout scout.nii

## csi_template used to make nifti from 2d mat csi outputs
# 3dcopy -overwrite $(dirname $scout)/s17/9x9mm.nii.gz csi_template.nii
# get slice number as it were 0 index. prob 17 is now 16
slice_num_0=$scout_slice_num
let slice_num_0-=1
# get voxel size from json config file. likely: 9 9
voxsize=($(jq '.csi_vox|map(tostring)|join(" ")' -r "$csi_json"))

3dZcutup -keep $slice_num_0 $slice_num_0 $scout
3dresample -dxyz ${voxsize[@]} 3 -input zcutup+orig.HEAD  -prefix csi_template.nii -overwrite
rm zcutup+orig*

## do the meat of it in matlab
mscript=fs_csi_${subj_date}.m  
cat > $mscript <<EOF
% generated by $0 ($(pwd)) on $(date)
addpath('$nifti_dir');
addpath('$spm_dir');

matlabcode_dir='$matlabcode_dir';
ROI_dir='$ROI_dir';
data_dir='$data_dir';
roi_file='$scriptdir/roi.txt';
csi_json='$csi_json';
filename_scout='scout.nii';
filename_flair='$filename_flair';

csi_csv = '$csi_si1_csv';
csi_nii_out = fullfile(data_dir,'csi_val');
csi_template = fullfile(data_dir,'csi_template.nii');

cd(matlabcode_dir);
grouping_masks(roi_file, ROI_dir) 
img_resize_ft(data_dir,filename_scout);
spm_reg_ROIs(ROI_dir, roi_file, fullfile(data_dir,filename_scout), filename_flair) 
csi_roi_label(ROI_dir, roi_file, csi_json, filename_flair,$scout_slice_num)
% makes 2d_csi_ROI and struct_ROI directories

% make niftis
csi_2d_dir = fullfile(data_dir,'2d_csi_ROI');
dir2d_to_niis(csi_2d_dir,csi_2d_dir, csi_template);

% for csi data too
SI1_to_nii(csi_csv, csi_template, csi_nii_out);
EOF

echo "# running $(pwd)/$mscript"

### actually run!
# -nodesktop -nosplash 
matlab -nodisplay -r "try, ${mscript%.m}, end; quit" |tee $log_reg

# put niftis together for easy viewing
3dbucket -prefix all_csi.nii.gz csi_val/*nii
3dbucket -prefix all_probs.nii.gz 2d_csi_ROI/*nii
3drefit -relabel_all_str \
  "$(ls 2d_csi_ROI/*nii |
     perl -MFile::Basename -pe '
       $_=basename($_,".nii");
       s/^\d+_(.*)_FlipLR/\1/;
       s/csivoxel.// ')" \
   all_probs.nii.gz
ln -s ../mprage_in_slice.nii.gz ./
